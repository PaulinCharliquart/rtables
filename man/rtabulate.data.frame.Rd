% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rtabulate.R
\name{rtabulate.data.frame}
\alias{rtabulate.data.frame}
\title{Split data.frame and apply functions}
\usage{
\method{rtabulate}{data.frame}(x, row_by, col_by, FUN, ...,
  format = NULL, indent = 0, col_wise_args = NULL)
}
\arguments{
\item{x}{a vecor}

\item{col_by}{a \code{\link{factor}} of length \code{nrow(x)} that defines
which levels in \code{col_by} define a column. If data should not be split
into columns use the \code{\link{no_by}} function.}

\item{FUN}{a function that processes the cell data, if \code{row_data_arg} is
set to \code{TRUE} the a second argument with the row data is passed to
\code{FUN}}

\item{...}{arguments passed to \code{FUN}}

\item{format}{if \code{FUN} does not return a formatted \code{\link{rcell}}
then the \code{format} is applied}

\item{indent}{non-negative integer where 0 means that the row should not be
indented}

\item{row_by_var}{name of factor variable in \code{x}}

\item{col_by_var}{name of factor variable in \code{x}}
}
\value{
an \code{\link{rtable}} project
}
\description{
Split data.frame and apply functions
}
\examples{
df <- expand.grid(aaa = factor(c("A", "B")), bbb = factor(c("X", "Y", "Z")))
df <- rbind(df, df)
df$val <- 1:nrow(df)

rtabulate(
  x = df,
  row_by = df$aaa,
  col_by = df$bbb,
  FUN = function(x) {  
     sum(x$val)
  }
)

rtabulate(
  x = iris,
  row_by = no_by("sum"),
  col_by = iris$Species, 
  FUN = function(x) sum(x$Sepal.Length)
)

rtabulate(
  x = iris,
  row_by = iris$Species,
  col_by = no_by("sum"), 
  FUN = function(x) sum(x$Sepal.Length)
)

fsl5 <- factor(iris$Sepal.Length > 5, levels = c(TRUE, FALSE),
    labels = c("S.L > 5", "S.L <= 5"))

tbl <- rtabulate(
  x = iris,
  row_by = fsl5,
  col_by = iris$Species, 
  FUN = function(x_cell) {
    if (nrow(x_cell) < 10) {
      rcell("-")
    } else {
      fit <- lm(Sepal.Length ~ Petal.Width, data = x_cell)
           
      rcell(list(fit), format = function(x, output) {
        paste("df:", x[[1]]$df.residual)
      })
    }
  }
)
tbl



rtabulate(
  x = iris,
  row_by = fsl5,
  col_by = iris$Species, 
  FUN = function(x_cell, N) {
     N
  },
  col_wise_args = list(N = c(10, 100, 200))
)

 

}
