% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/argument_conventions.R
\name{lyt_args}
\alias{lyt_args}
\title{Layouting Function Arg Conventions}
\usage{
lyt_args(
  lyt,
  var,
  vars,
  lbl,
  vlblvar,
  varlbls,
  splfmt,
  newtoplev,
  fmt,
  cfun,
  cfmt,
  splfun,
  splname,
  splbl,
  afun,
  defrowlab,
  inclNAs,
  valorder,
  baseline,
  compfun,
  lbl_fstr,
  lblkids,
  extrargs,
  name,
  cuts,
  cutlbls,
  cutfun,
  cutlblfun,
  cumulative,
  incl_all,
  indent_mod
)
}
\arguments{
\item{lyt}{layout object pre-data used for tabulation}

\item{var}{string, variable name}

\item{vars}{character vector. Multiple variable names.}

\item{lbl}{string, label, often variable label}

\item{vlblvar}{string, name of variable containing labels to be displayed for the values of \code{var}}

\item{varlbls}{character vector. Labels for \code{vars}}

\item{splfmt}{format spec. Format associated with this split.}

\item{newtoplev}{boolean, Add this as a new top-level split  (defining a new subtable directly under root). Defaults to \code{FALSE}}

\item{fmt}{format string for cells}

\item{cfun}{function/NULL. tabulation function for creating content rows. Must accept \code{df} as first parameter. Optionally accepts}

\item{cfmt}{format spec. Format for content rows}

\item{splfun}{function/NULL. custom splitting function}

\item{splname}{string. Name associiated with this split (for pathing, etc)}

\item{splbl}{string. Labe associated with this split}

\item{afun}{function. Analysis function, must take \code{x} or \code{df} as its first parameter. Can optionally take other parameters which will be populated by the tabulation framework. See Details in \code{\link{analyze}}.}

\item{defrowlab}{character vector. Default row labels for resulting analysis rows.}

\item{inclNAs}{boolean. Should observations with NA in the \code{var} variable(s) be included when performing this analysis. Defaults to \code{FALSE}}

\item{valorder}{character vector. Order that the split children should appear in resulting table.}

\item{baseline}{character. Value of \code{var} to be taken as the baseline/control to be compared against.}

\item{compfun}{function/string. The comparison function which accepts the analysis function outputs for two different partitions and returns a single value. Defaults to subraction. If a string, taken as the name of a function.}

\item{lbl_fstr}{string. An sprintf style format string containing. For non-comparison splits, it can contain  up to one \code{"\%s"} which takes the current split value and generates the row/column label. Comparison-based splits it can contain up to two \code{"\%s"}.}

\item{lblkids}{logical. Should the children of this split have label rows. Defaults to \code{NA} which creates a label row only if the child has 0 content rows.}

\item{extrargs}{list. Extra arguments to be passed to the tabulation function. Element position in thte list corresponds to the children of this split. Named elements in the child-specific lists are ignored if they do not match a formal argument of the ttabulation function.}

\item{name}{character(1). Name of the split/table/row being creatted. Defaults to same as the corresponding llabel, but is not required to be.}

\item{cuts}{numeric. Cuts to use}

\item{cutlbls}{character (or NULL). Labels for the cuts}

\item{cutfun}{function. Function which accepts the \emph{full vector} of \code{var} values and returns cut points to be used (via \code{cut}) when splitting data during tabulation}

\item{cutlblfun}{function. Function which returns either labels for the cuts or NULL when passed the return value of \code{cutfun}}

\item{cumulative}{logical. Should the cuts be treated as cumulative. Defaults to \code{FALSE}}

\item{incl_all}{logical(1). Should an "all" comparison column be created. Defaults to \code{FALSE}.}

\item{indent_mod}{numeric. Modifier for the default indent position for the structure created by this function(subtable, content table, or row) \emph{and all of that structure's children}. Defaults to 0, which corresponds to the unmodified default behavior.}
}
\description{
Layouting Function Arg Conventions
}
\seealso{
Other conventions: 
\code{\link{compat_args}()},
\code{\link{constr_args}()},
\code{\link{gen_args}()}
}
\concept{conventions}
